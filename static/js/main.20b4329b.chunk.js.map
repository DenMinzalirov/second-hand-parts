{"version":3,"sources":["firebase/firebase.js","store/actions/userAction.js","store/reducers/user.js","store/actions/dataBaseAction.js","store/reducers/dataBase.js","store/reducers/index.js","store/configureStore.js","containers/createOrder/createOrder.js","containers/createOrder/style.js","common/spiner.js","common/copiright.js","containers/loginForm/logIn.js","containers/loginForm/signUp.js","containers/navPanel/navPanel.js","containers/itemOrder/itemOrder.js","containers/itemOrder/style.js","containers/viewOrders/viewOrders.js","containers/userAccount/userAccount.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","logOutUser","dispatch","type","auth","signOut","initialState","displayName","isFetching","isLoggedIn","error","getBase","database","ref","once","then","snapshot","payload","Object","entries","val","map","ent","id","reverse","catch","e","console","log","rootReducer","combineReducers","userInfo","state","action","password","phone","ownerId","email","dataBase","myOrders","baseOrders","allUsers","userOwnerPhone","store","createStore","applyMiddleware","thunk","logger","useStyles","makeStyles","theme","container","display","flexWrap","margin","textField","marginTop","spacing","marginBottom","buttonOrder","flex","justifyContent","initStateOrder","brand","model","part","description","connect","ownerPhone","ownerName","props","createYear","Date","getFullYear","date","toDateString","history","item","itemId","clearItemOrder","useState","setState","useEffect","push","isValid","setIsValid","handleChange","target","name","value","FormControl","className","noValidate","autoComplete","TextField","onChange","label","fullWidth","variant","Button","disabled","onClick","remove","setOrderInFirebase","color","override","css","Spiner","size","loading","Copyright","Typography","align","Link","href","paper","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","aLink","textDecoration","user","setUser","signInWithEmailAndPassword","message","classes","Container","component","maxWidth","CssBaseline","Avatar","required","autoFocus","inputRef","el","helperText","Grid","xs","to","Box","mt","createUser","createUserWithEmailAndPassword","updateProfile","child","uid","set","sm","justify","root","flexGrow","menuButton","marginRight","title","toolbar","checkAuthStateChanged","onAuthStateChanged","status","AppBar","position","Toolbar","modal","background","border","boxShadow","shadows","padding","itemString","borderRadius","buttonDel","editer","delItem","itemOrder","isEdit","setIsEdit","isOwner","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","length","filtredArr","MyTable","setItemOrder","data","columns","field","sort","rows","clickEvent","striped","bordered","small","hover","clearBase","isShowMyOrders","setisShowMyOrders","filter","App","Fragment","path","LogIn","SignUp","CreateOrder","UserAccount","ViewOrders","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qTAceA,G,cAAAA,IAASC,cAVD,CACrBC,OAAQ,0CACRC,WAAY,0CACZC,YAAa,iDACbC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,gBACnBC,MAAO,gDCqGIC,EAAa,WACxB,OAAO,SAAAC,GACLA,EAAS,CACPC,KAxGsB,iBA0GxBX,EAASY,OAAOC,YCxGdC,EAAe,CACnBC,YAAa,GAEbC,YAAY,EACZC,YAAY,EACZC,OAAO,GChBF,IAqCMC,EAAU,WACrB,OAAO,SAAAT,GACLA,EAAS,CACPC,KAxC0B,qBA0C5BX,EACGoB,WACAC,IAAI,UACJC,KAAK,SACLC,MAAK,SAAAC,GACJd,EAAS,CACPC,KA/CsB,mBAgDtBc,QAASC,OAAOC,QAAQH,EAASI,OAAOC,KAAI,SAACC,GAE3C,OADAA,EAAI,GAAGC,GAAKD,EAAI,GACTA,EAAI,MACVE,eAGNC,OAAM,SAAAC,GACLC,QAAQC,IAAI,qBAAsBF,GAClCxB,EAAS,CACPC,KAxDwB,qBAyDxBc,QAASS,SChDbpB,EAAe,GCTd,IAAMuB,EAAcC,YAAgB,CACzCC,SHgBK,WAAoD,IAA/BC,EAA8B,uDAAtB1B,EAAc2B,EAAQ,uCACxD,OAAQA,EAAO9B,MACb,IDrB4B,mBCsB1B,OAAO,eAAK6B,EAAZ,CAAmBxB,YAAY,IACjC,IDtB4B,mBCuB1B,OAAO,eACFwB,EADL,CAMExB,YAAY,EACZC,YAAY,IAEhB,ID/B8B,qBCgC5B,OAAO,eACFuB,EADL,CAEEtB,MAAOuB,EAAOhB,QACdT,YAAY,EACZC,YAAY,IAEhB,IDrC8B,qBCsC5B,OAAO,eAAKuB,EAAZ,CAAmBxB,YAAY,IACjC,IDtC8B,qBCuC5B,OAAO,eACFwB,EADL,GAEKC,EAAOhB,QAFZ,CAGEiB,SAAU,GAIV1B,YAAY,EACZC,YAAY,IAEhB,IDhDgC,uBCiD9B,OAAO,eACFuB,EADL,CAEExB,YAAY,EACZC,YAAY,EACZF,YAAa,GACb4B,MAAO,GACPC,QAAS,GACTF,SAAU,GACVG,MAAO,KAEX,ID1D+B,sBC2D7B,OAAO,eAAKL,EAAZ,CAAmBxB,YAAY,IACjC,ID3D+B,sBC4D7B,OAAO,eACFwB,EADL,GAEKC,EAAOhB,QAFZ,CAMET,YAAY,EACZC,YAAY,IAEhB,IDpEiC,wBCqE/B,OAAO,eACFuB,EADL,CAEEtB,MAAOuB,EAAOhB,QACdT,YAAY,EACZC,YAAY,IAEhB,ID1EwB,eC2EtB,OAAOH,EACT,QACE,OAAO0B,IGlFXM,SDSK,WAAwD,IAA/BN,EAA8B,uDAAtB1B,EAAc2B,EAAQ,uCAC5D,OAAQA,EAAO9B,MACb,IDL+B,sBCM7B,OAAO,eAAK6B,EAAZ,CAAmBxB,YAAY,IACjC,IDN+B,sBCO7B,OAAO,eACFwB,EADL,CAEEO,SAAUN,EAAOhB,QACjBT,YAAY,IAEhB,IDvB4B,mBCwB1B,OAAO,eAAKwB,EAAZ,CAAmBxB,YAAY,IACjC,IDxB4B,mBCyB1B,OAAO,eACFwB,EADL,CAEEQ,WAAYP,EAAOhB,QACnBT,YAAY,IAEhB,IDzBiC,oBC0B/B,OAAO,eAAKwB,EAAZ,CAAmBxB,YAAY,IACjC,ID1BiC,oBC2B/B,OAAO,eACFwB,EADL,CAEES,SAAUR,EAAOhB,QACjBT,YAAY,IAEhB,IDpCkC,yBCqChC,OAAO,eAAKwB,EAAZ,CAAmBxB,YAAY,IACjC,IDrCkC,yBCsChC,OAAO,eACFwB,EADL,CAEEU,eAAgBT,EAAOhB,QACvBT,YAAY,IAEhB,IDlCsB,aCmCpB,OAAO,eAAKF,EAAZ,CAA0BE,YAAY,IACxC,QACE,OAAOwB,M,yBE/CAW,EAAQC,YAAYf,EAAagB,YAAgBC,IAAOC,M,uFCI/DC,EAAYC,aCTI,SAAAC,GAAK,MAAK,CAC5BC,UAAW,CACPC,QAAS,OACTC,SAAU,OACVC,OAAQ,QAEZC,UAAW,CAKPC,UAAWN,EAAMO,QAAQ,GACzBC,aAAcR,EAAMO,QAAQ,IAEhCE,YAAa,CACTP,QAAS,OACTQ,KAAM,OACNC,eAAgB,cDNpBC,EAAiB,CACnBC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,YAAa,GACb9B,QAAS,IAwHI+B,eAhBS,SAAC,GAA+D,IAAD,IAA5DpC,SACzB,MAAO,CACLK,QAFmF,EAAhDA,QAGnC3B,WAHmF,EAAvCA,WAI5C2D,WAJmF,EAA3BjC,MAKxDkC,UALmF,EAApB9D,gBASxC,SAAAL,GACzB,MAAO,CACLS,QAAS,kBAAMT,EAASS,SAKbwD,EArHK,SAAAG,GAClB,IAAMC,GAAc,IAAIC,MAAQC,cAC1BC,GAAQ,IAAIF,MAAQG,eAGlBvC,EAAoGkC,EAApGlC,QAAS3B,EAA2F6D,EAA3F7D,WAAYmE,EAA+EN,EAA/EM,QAASjE,EAAsE2D,EAAtE3D,QAASyD,EAA6DE,EAA7DF,WAAYC,EAAiDC,EAAjDD,UAAWQ,EAAsCP,EAAtCO,KAL3C,EAKiFP,EAAhCQ,cALjD,MAK0D,GAL1D,EAK8DC,EAAmBT,EAAnBS,eAL9D,EAODC,mBAASlB,GAPR,mBAOpB9B,EAPoB,KAObiD,EAPa,KAS3BC,qBAAU,WACHzE,GACHmE,EAAQO,KAAK,KAEXN,GACFI,EAASJ,KAEV,IAhBwB,MAkBmB7B,IAAtCG,EAlBmB,EAkBnBA,UAAWI,EAlBQ,EAkBRA,UAAWI,EAlBH,EAkBGA,YAlBH,EAqBGqB,oBAAS,GArBZ,mBAqBpBI,EArBoB,KAqBXC,EArBW,KAuBrBC,EAAe,SAAC,GAAiC,IAAD,MAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCR,EAAS,eAAKjD,GAAN,mBAAcwD,EAAOC,GAArB,wBAA4BrD,GAA5B,2BAAqCgC,GAArC,0BAAiDC,GAAjD,2BAA4DE,GAA5D,qBAAwEG,GAAxE,2BAA0F,IAA1F,KACRW,GAAW,IAiBb,OACE,kBAACK,EAAA,EAAD,CAAaC,UAAWxC,EAAWyC,YAAU,EAACC,aAAa,OACzD,wBAAIF,UAAWhC,GAAf,+FACA,kBAACmC,EAAA,EAAD,CACEN,KAAK,QACLG,UAAWpC,EACXkC,MAAOzD,EAAM+B,MACbgC,SAAUT,EACVU,MAAM,mPACNC,WAAS,EACTC,QAAQ,aAEV,kBAACJ,EAAA,EAAD,CACEN,KAAK,QACLG,UAAWpC,EACXkC,MAAOzD,EAAMgC,MACb+B,SAAUT,EACVU,MAAM,6PACNC,WAAS,EACTC,QAAQ,aAEV,kBAACJ,EAAA,EAAD,CACEN,KAAK,OACLG,UAAWpC,EACXkC,MAAOzD,EAAMiC,KACb8B,SAAUT,EACVU,MAAM,6SACNC,WAAS,EACTC,QAAQ,aAEV,kBAACJ,EAAA,EAAD,CACEN,KAAK,cACLG,UAAWpC,EACXkC,MAAOzD,EAAMkC,YACb6B,SAAUT,EACVU,MAAM,yLACNC,WAAS,EACTC,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,UAAWhB,EACXiB,QAAS,YAvDY,SAAArE,GACrB8C,GACFtF,EACGoB,WACAC,IAAI,UAAYiE,GAChBwB,SAEL9G,EACGoB,WACAC,IAAI,UACJsE,KAAKnD,GACRiD,EAASnB,GACTuB,GAAW,GA4CLkB,CAAmBvE,GACnBrB,IACImE,GACFC,KAIJmB,QAAQ,WACRP,UAAWhC,EACX6C,MAAM,WAZR,2H,kOEhGN,IAAMC,EAAWC,cAAH,KAYCC,EANA,WACb,OACE,kBAAC,IAAD,CAAcD,IAAKD,EAAUG,KAAM,GAAIJ,MAAO,UAAWK,SAAS,KCIvDC,EAbG,WAChB,OACE,kBAACC,EAAA,EAAD,CAAYb,QAAQ,QAAQM,MAAM,gBAAgBQ,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMT,MAAM,UAAUU,KAAK,8BAA3B,qFAEQ,KACP,IAAI1C,MAAOC,cACX,MCUDzB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiE,MAAO,CACL3D,UAAWN,EAAMO,QAAQ,GACzBL,QAAS,OACTgE,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNhE,OAAQJ,EAAMO,QAAQ,GACtB8D,gBAAiBrE,EAAMsE,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPpE,UAAWN,EAAMO,QAAQ,IAE3BoE,OAAQ,CACNvE,OAAQJ,EAAMO,QAAQ,EAAG,EAAG,IAE9BqE,MAAO,CACLC,eAAgB,OAChBvB,MAAO,eA0IIrC,eAbS,SAAAxB,GACtB,MAAO,CACLqF,KAAMrF,EAAMZ,aAIW,SAAA7B,GACzB,MAAO,CACL+H,QAAS,SAAAD,GAAI,OAAI9H,EVpHE,SAAC,GAAwB,IAAtB8H,EAAqB,EAArBA,KAAM9F,EAAe,EAAfA,SAC9B,OAAO,SAAAhC,GACLA,EAAS,CACPC,KA3D0B,qBA6D5BX,EACGY,OACA8H,2BAA2BF,EAAM9F,GACjCnB,MAAK,WAEJb,EAAS,CACPC,KAlEsB,wBAsEzBsB,OAAM,SAAAC,GACLxB,EAAS,CACPC,KAvEwB,qBAwExBc,QAASS,EAAEyG,cUkGSF,CAAQD,KAClC/H,WAAY,kBAAMC,EAASD,SAIhBkE,EAtID,SAAAG,GAGZ,IACIjC,EAAOH,EADLkG,EAAUpF,IAGdiF,EAGE3D,EAHF2D,QANmB,EASjB3D,EAFF0D,KAAQxH,EAPW,EAOXA,WAAYE,EAPD,EAOCA,MAAOD,EAPR,EAOQA,WAC3BmE,EACEN,EADFM,QASF,OANAM,qBAAU,WACJzE,GACFmE,EAAQO,KAAK,cAKf,kBAACkD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAK7C,UAAWyC,EAAQjB,OACrB3G,EACC,kBAAC,EAAD,MAEE,kBAACiI,EAAA,EAAD,CAAQ9C,UAAWyC,EAAQd,QACzB,kBAAC,IAAD,OAGN,kBAACP,EAAA,EAAD,CAAYuB,UAAU,KAAKpC,QAAQ,MAAnC,WAGA,0BAAMP,UAAWyC,EAAQT,KAAM/B,YAAU,GACvC,kBAACE,EAAA,EAAD,CACEpF,QAASA,EACTwF,QAAQ,WACR5C,OAAO,SACPoF,UAAQ,EACRzC,WAAS,EACT1E,GAAG,QACHyE,MAAM,gBACNR,KAAK,QACLK,aAAa,QACb8C,WAAS,EACTC,SAAU,SAAAC,GAAE,OAAKxG,EAAQwG,KAE3B,kBAAC/C,EAAA,EAAD,CACEpF,QAASA,EACToI,WAAYpI,EACZwF,QAAQ,WACR5C,OAAO,SACPoF,UAAQ,EACRzC,WAAS,EACTT,KAAK,WACLQ,MAAM,WACN7F,KAAK,WACLoB,GAAG,WACHsE,aAAa,mBACb+C,SAAU,SAAAC,GAAE,OAAK3G,EAAW2G,KAO9B,kBAAC1C,EAAA,EAAD,CACEF,WAAS,EACTC,QAAQ,YACRM,MAAM,UACNb,UAAWyC,EAAQP,OACnBxB,QAAS,WACP4B,EAAQ,CAAED,KAAM3F,EAAMoD,MAAOvD,SAAUA,EAASuD,UANpD,WAWA,kBAACsD,EAAA,EAAD,CAAM5F,WAAS,GACb,kBAAC4F,EAAA,EAAD,CAAMlE,MAAI,EAACmE,IAAE,GACX,kBAAC/B,EAAA,EAAD,CAAMC,KAAK,IAAIhB,QAAQ,SAAvB,qBAIF,kBAAC6C,EAAA,EAAD,CAAMlE,MAAI,GACR,kBAAC,IAAD,CAASc,UAAWyC,EAAQN,MAAOmB,GAAG,WACnC,sCAMX,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,WCnHFnG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiE,MAAO,CACL3D,UAAWN,EAAMO,QAAQ,GACzBL,QAAS,OACTgE,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNhE,OAAQJ,EAAMO,QAAQ,GACtB8D,gBAAiBrE,EAAMsE,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPpE,UAAWN,EAAMO,QAAQ,IAE3BoE,OAAQ,CACNvE,OAAQJ,EAAMO,QAAQ,EAAG,EAAG,IAE9BqE,MAAO,CACLC,eAAgB,OAChBvB,MAAO,eAuIIrC,eAZS,SAAAxB,GACtB,MAAO,CACLqF,KAAMrF,EAAMZ,aAIW,SAAA7B,GACzB,MAAO,CACLkJ,WAAY,SAAApB,GAAI,OAAI9H,EX9JE,SAAC,GAA6C,IAA3CmC,EAA0C,EAA1CA,MAAOH,EAAmC,EAAnCA,SAAU3B,EAAyB,EAAzBA,YAAa4B,EAAY,EAAZA,MACzD,OAAO,SAAAjC,GACLA,EAAS,CACPC,KAR6B,wBAU/BX,EACGY,OACAiJ,+BAA+BhH,EAAOH,GACtCnB,MAAK,SAAAiH,GACJA,EAAKA,KACFsB,cAAc,CACb/I,gBAEDQ,MAAK,WACJvB,EACGoB,WACAC,IAAI,SACJ0I,MAAMvB,EAAKA,KAAKwB,KAChBC,IAAI,CACHpH,QACAH,WACA3B,cACA4B,QACAC,QAAS4F,EAAKA,KAAKwB,SAG3BtJ,EAAS,CACPC,KA/ByB,sBAgCzBc,QAAS,CACPoB,QACA9B,cACA4B,QACAC,QAAS4F,EAAKA,KAAKwB,UAIxB/H,OAAM,SAAAC,GACLxB,EAAS,CACPC,KAzC2B,wBA0C3Bc,QAASS,EAAEyG,cWuHYiB,CAAWpB,QAI7B7D,EAnIA,SAAAG,GACb3C,QAAQC,IAAI,SAAU0C,GADA,IAQlBkB,EAAMrD,EAAOE,EAAOH,EALtBkH,EAGE9E,EAHF8E,WACAxE,EAEEN,EAFFM,QAJoB,EAMlBN,EADF0D,KAAQxH,EALY,EAKZA,WAAYE,EALA,EAKAA,MAAOD,EALP,EAKOA,WAEvB2H,EAAUpF,IAQhB,OANAkC,qBAAU,WACJzE,GACFmE,EAAQO,KAAK,cAKf,kBAACkD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAK7C,UAAWyC,EAAQjB,OACrB3G,EACC,kBAAC,EAAD,MAEE,kBAACiI,EAAA,EAAD,CAAQ9C,UAAWyC,EAAQd,QACzB,kBAAC,IAAD,OAGN,kBAACP,EAAA,EAAD,CAAYuB,UAAU,KAAKpC,QAAQ,MAAnC,WAGA,0BAAMP,UAAWyC,EAAQT,KAAM/B,YAAU,GACvC,kBAACmD,EAAA,EAAD,CAAM5F,WAAS,EAACM,QAAS,GACvB,kBAACsF,EAAA,EAAD,CAAMlE,MAAI,EAACmE,GAAI,GAAIU,GAAI,GACrB,kBAAC5D,EAAA,EAAD,CACED,aAAa,QACbL,KAAK,OACLU,QAAQ,WACRwC,UAAQ,EACRzC,WAAS,EACT1E,GAAG,OACHyE,MAAM,OACN2C,WAAS,EACTC,SAAU,SAAAC,GAAE,OAAKrD,EAAOqD,MAG5B,kBAACE,EAAA,EAAD,CAAMlE,MAAI,EAACmE,GAAI,GAAIU,GAAI,GACrB,kBAAC5D,EAAA,EAAD,CACEI,QAAQ,WACRwC,UAAQ,EACRzC,WAAS,EACT1E,GAAG,QACHyE,MAAM,QACNR,KAAK,QACLK,aAAa,QACb+C,SAAU,SAAAC,GAAE,OAAK1G,EAAQ0G,MAG7B,kBAACE,EAAA,EAAD,CAAMlE,MAAI,EAACmE,GAAI,IACb,kBAAClD,EAAA,EAAD,CACEpF,QAASA,EACTwF,QAAQ,WACRwC,UAAQ,EACRzC,WAAS,EACT1E,GAAG,QACHyE,MAAM,gBACNR,KAAK,QACLK,aAAa,QACb+C,SAAU,SAAAC,GAAE,OAAKxG,EAAQwG,MAG7B,kBAACE,EAAA,EAAD,CAAMlE,MAAI,EAACmE,GAAI,IACb,kBAAClD,EAAA,EAAD,CACEpF,QAASA,EACToI,WAAYpI,EACZwF,QAAQ,WACRwC,UAAQ,EACRzC,WAAS,EACTT,KAAK,WACLQ,MAAM,WACN7F,KAAK,WACLoB,GAAG,WACHsE,aAAa,mBACb+C,SAAU,SAAAC,GAAE,OAAK3G,EAAW2G,OAIlC,kBAAC1C,EAAA,EAAD,CAEEF,WAAS,EACTC,QAAQ,YACRM,MAAM,UACNb,UAAWyC,EAAQP,OACnBxB,QAAS,WACP+C,EAAW,CACT/G,MAAOA,EAAMoD,MACbvD,SAAUA,EAASuD,MACnBlF,YAAaiF,EAAKC,MAClBtD,MAAOA,EAAMsD,QAEf9D,QAAQC,IAAI4D,EAAKC,SAbrB,WAkBA,kBAACsD,EAAA,EAAD,CAAM5F,WAAS,EAACwG,QAAQ,YACtB,kBAACZ,EAAA,EAAD,CAAMlE,MAAI,GACR,kBAAC,IAAD,CAASc,UAAWyC,EAAQN,MAAOmB,GAAG,SAAS/C,QAAQ,SAAvD,wCAOR,kBAACgD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,W,oBCjJFnG,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC0G,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAa7G,EAAMO,QAAQ,IAE7BuG,MAAO,CACLH,SAAU,GAEZI,QAAS,CACPpG,eAAgB,iBAElBiE,MAAO,CACLtB,MAAO,UACPuB,eAAgB,eA+DL5D,gBAdS,SAAAxB,GACtB,MAAO,CACLZ,SAAUY,EAAMZ,aAKO,SAAA7B,GACzB,MAAO,CACLgK,sBAAuB,kBAAMhK,GZFxB,SAAAA,GACLA,EAAS,CACPC,KAhF4B,uBAkF9BX,EAASY,OAAO+J,oBAAmB,SAAAC,GAE7BA,EACF5K,EACGoB,WACAC,IAAI,SACJ0I,MAAMa,EAAOZ,KACb1I,KAAK,SACLC,MAAK,SAAAC,GAEJd,EAAS,CACPC,KA5FoB,qBA6FpBc,QAASD,EAASI,WAIxBlB,EAAS,CACPC,KAjG0B,mCYmFrBgE,EA3DE,SAAAG,GACf,IAAM8D,EAAUpF,KADQ,EAOpBsB,EAHFvC,SAAYtB,EAJU,EAIVA,WAAYF,EAJF,EAIEA,YACxB2J,EAEE5F,EAFF4F,sBAeF,OAXAhF,qBAAU,WACHzE,GACHyJ,MAKD,IAIIzJ,EACL,yBAAKkF,UAAWyC,EAAQwB,MACtB,kBAACS,GAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,GAAA,EAAD,CAAS5E,UAAWyC,EAAQ6B,SAC1B,kBAAC,IAAD,CAAStE,UAAWyC,EAAQN,MAAOmB,GAAG,WACpC,kBAAC9C,EAAA,EAAD,CAAQD,QAAQ,WAAWM,MAAM,WAAjC,gGAIF,kBAAC,IAAD,CAASb,UAAWyC,EAAQN,MAAOmB,GAAG,SACpC,kBAAC9C,EAAA,EAAD,CAAQD,QAAQ,WAAWM,MAAM,WAAjC,gGAIF,kBAAC,IAAD,CAASb,UAAWyC,EAAQN,MAAOmB,GAAG,gBACpC,kBAAC9C,EAAA,EAAD,CAAQD,QAAQ,WAAWM,MAAM,WAAjC,gBACgBjG,OAMtB,Q,uCChEAyC,GAAYC,aCTI,SAAAC,GAAK,MAAK,CAC9BsH,MAAO,CACLpH,QAAS,OACTiE,WAAY,SACZxD,eAAgB,UAElBsD,MAAO,CACLI,gBAAiBrE,EAAMsE,QAAQiD,WAAWtD,MAC1CuD,OAAQ,iBACRC,UAAWzH,EAAM0H,QAAQ,GACzBC,QAAS3H,EAAMO,QAAQ,EAAG,EAAG,IAE/BqH,WAAY,CACVvD,gBAAiB,YACjBwD,aAAc,QACdzH,OAAQ,QAEV0H,UAAW,CACT5H,QAAS,OACTQ,KAAM,OACNC,eAAgB,UAElBoH,OAAQ,CACN7H,QAAS,OACTS,eAAgB,SAChBuD,cAAe,cDiHJjD,gBAbS,SAAAnC,GACtB,MAAO,CACLA,YAIuB,SAAA9B,GACzB,MAAO,CACLS,QAAS,kBAAMT,EAASS,MACxBuK,QAAS,SAAC3J,GAAD,OAAQrB,GXrHG4E,EWqHcvD,EXpH7B,SAAArB,GACLA,EAAS,CACPC,KATkB,aAWpBX,EACGoB,WACAC,IAAI,UAAYiE,GAChBwB,SAASvF,MAAK,SAACW,GACdC,QAAQC,IAAI,WAAYF,SATT,IAACoD,MWyHTX,EA/HG,SAAAG,GAEhB,IAAM8D,EAAUpF,KAEdrC,EAME2D,EANF3D,QACAuK,EAKE5G,EALF4G,QACAC,EAIE7G,EAJF6G,UAEc/I,EAEZkC,EAHFtC,MACED,SAAYK,QARS,EAYG4C,oBAAS,GAZZ,mBAYlBoG,EAZkB,KAYVC,EAZU,KAanBC,EAAUH,EAAU/I,UAAYA,EAEtC,OACE,6BACE,kBAACmJ,GAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjB9F,UAAWyC,EAAQoC,MACnBkB,OAAQP,EAAU5J,GAClBoK,QACE,WACErH,EAAMS,iBACNsG,GAAU,IAGdO,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,GAAA,EAAD,CACEC,KAAMf,EAAU5J,IAEhB,yBAAKoE,UAAWyC,EAAQjB,OACtB,wBAAI5F,GAAG,0BAAP,2GACA,yBAAKoE,UAAWyC,EAAQ6C,QAEpBG,EACE,kBAAC,EAAD,CAAarG,eAAgBT,EAAMS,eAAgBF,KAAMsG,EAAWrG,OAAQqG,EAAU5J,KACtF,6BACE,yBAAKoE,UAAWyC,EAAQ0C,YAAxB,qDACaK,EAAU9G,WAAa,IAEpC,yBAAKsB,UAAWyC,EAAQ0C,YAAxB,UAA4CK,EAAUpH,OAAS,GAA/D,KACA,yBAAK4B,UAAWyC,EAAQ0C,YAAxB,UAA4CK,EAAUnH,OAAS,IAC/D,yBAAK2B,UAAWyC,EAAQ0C,YAAxB,SAA2CK,EAAUlH,MAAQ,IAC7D,yBAAK0B,UAAWyC,EAAQ0C,YAAxB,gBACgBK,EAAUjH,aAAe,IAEzC,yBACEyB,UAAWyC,EAAQ0C,YADrB,0FAGoBK,EAAU/G,YAE9B,yBACEuB,UAAWyC,EAAQ0C,YADrB,8EAGkBK,EAAUzG,OAIjC4G,EACC,oCACE,kBAACnF,EAAA,EAAD,CACED,QAAQ,WACRP,UAAWyC,EAAQ4C,UACnBxE,MAAM,UACNH,QAAS,WACP/B,EAAMS,iBACNmG,EAAQC,EAAU5J,IAClBZ,MAPJ,kJAaEyK,EACE,kBAACjF,EAAA,EAAD,CACED,QAAQ,WACRP,UAAWyC,EAAQ4C,UACnBxE,MAAM,UACNH,QAAS,WACPgF,GAAU,KALd,yIAWA,kBAAClF,EAAA,EAAD,CACED,QAAQ,WACRP,UAAWyC,EAAQ4C,UACnBxE,MAAM,UACNH,QAAS,WACPgF,GAAU,KALd,oIAYJ,aEnEHlH,gBAbS,SAAC,GACvB,MAAO,CACL7B,SAFiE,EAA1CA,SAGvB7B,WAHiE,EAAhCsB,SAAYtB,eAOtB,SAAAP,GACzB,MAAO,CACLS,QAAS,kBAAMT,EAASS,SAIbwD,EAvCI,SAAAG,GAAU,IAEzB3D,EAIE2D,EAJF3D,QACAiE,EAGEN,EAHFM,QACAnE,EAEE6D,EAFF7D,WAJwB,EAMtB6D,EADFhC,SAAY9B,EALY,EAKZA,WALY,IAKAgC,kBALA,MAKa,GALb,EAiB1B,OATA0C,qBAAU,WACHzE,GACHmE,EAAQO,KAAK,KAEX3C,EAAW2J,OAAS,GACtBxL,MAED,IAEIH,EACL,kBAAC,EAAD,CAAQoG,KAAM,MAEZ,kBAAC,GAAD,CACEwF,WAAY5J,OAoBP6J,GAAU,SAAC/H,GAAU,IAExB8H,EAAe9H,EAAf8H,WAFwB,EAGEpH,mBAAS,IAHX,mBAGzBmG,EAHyB,KAGdmB,EAHc,KAW1BC,EAAO,CACXC,QAAS,CACP,CACExG,MAAO,QACPyG,MAAO,QACPC,KAAM,OAGR,CACE1G,MAAO,QACPyG,MAAO,QACPC,KAAM,OAGR,CACE1G,MAAO,OACPyG,MAAO,OACPC,KAAM,OAGR,CACE1G,MAAO,cACPyG,MAAO,cACPC,KAAM,QAIVC,KAjC0BP,EAAW/K,KAAI,SAACwH,GAI1C,OAHAA,EAAG+D,WAAa,WACdN,EAAazD,IAERA,MAmCT,OACE,yBAAKlD,UAAU,aACb,kBAAC,KAAD,CACEkH,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,OAAK,EACLT,KAAMA,IAER,kBAAC,GAAD,CAAWpB,UAAWA,EAAWpG,eAZd,WACrBuH,EAAa,SCnFXtJ,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,QAAS,OACTC,SAAU,OACVC,OAAQ,OACR8D,cAAe,SACfC,WAAY,UAEd1D,YAAa,CACXP,QAAS,OACTQ,KAAM,OACNC,eAAgB,SAChBP,OAAQ,YA8EGa,gBAhBS,SAAAxB,GACtB,MAAO,CACLZ,SAAUY,EAAMZ,SAChBQ,SAAUI,EAAML,SAASC,SACzBC,WAAYG,EAAML,SAASE,eAIJ,SAAAtC,GACzB,MAAO,CACLD,WAAY,kBAAMC,EAASD,MAC3BgN,UAAW,kBAAM/M,Gd9DZ,SAAAA,GACLA,EAAS,CACPC,KAnBoB,mBcgFtBQ,QAAS,kBAAMT,EAASS,SAIbwD,EA1EK,SAAAG,GAAS,MAEQtB,KAA3BG,EAFmB,EAEnBA,UAAWQ,EAFQ,EAERA,YAFQ,EAGiBqB,oBAAS,GAH1B,mBAGpBkI,EAHoB,KAGJC,EAHI,KAMzBF,EAME3I,EANF2I,UACAhN,EAKEqE,EALFrE,WACA2E,EAIEN,EAJFM,QACAjE,EAGE2D,EAHF3D,QATyB,EAYvB2D,EAFF9B,kBAVyB,MAUZ,GAVY,IAYvB8B,EADFvC,SAAYtB,EAXa,EAWbA,WAAYuH,EAXC,EAWDA,KAAM5F,EAXL,EAWKA,QAGhC8C,qBAAU,WACHzE,GACHmE,EAAQO,KAAK,KAEfxE,MACC,IAEH,IAAMyL,EAAa5J,EAAW4K,QAAO,SAAAvE,GAAQ,OAAOA,EAAGzG,UAAYA,KAEnE,OACE,yBAAKuD,UAAWxC,GACd,wBAAIwC,UAAWhC,GAAcqE,GAC7B,kBAAC7B,EAAA,EAAD,CACED,QAAQ,WACRP,UAAWhC,EACX6C,MAAM,UACNH,QAAS,WACPpG,IACAgN,IACArI,EAAQO,KAAK,OAPjB,UAYC+H,EACC,kBAAC,GAAD,CACEd,WAAYA,IAGd,kBAACjG,EAAA,EAAD,CACED,QAAQ,WACRP,UAAWhC,EACX6C,MAAM,UACNH,QAAS,WACP8G,GAAkB,KALtB,4KClBOE,I,OArCH,WACV,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC9E,EAAA,EAAD,MACA,kBAACH,EAAA,EAAD,CAAWE,SAAS,MAClB,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgF,KAAK,SAASjF,UAAWkF,IAChC,kBAAC,IAAD,CAAOD,KAAK,UAAUjF,UAAWmF,IACjC,kBAAC,IAAD,CAAOF,KAAK,UAAUjF,UAAWoF,IACjC,kBAAC,IAAD,CAAOH,KAAK,eAAejF,UAAWqF,KAKtC,kBAAC,IAAD,CAAOJ,KAAK,QAAQjF,UAAWsF,KAC/B,kBAAC,IAAD,CAAU3E,GAAI,WCjBJ4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUxL,MAAOA,GACf,kBAAC,GAAD,QAGJyL,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzN,MAAK,SAAA0N,GACJA,EAAaC,gBAEdjN,OAAM,SAAAf,GACLiB,QAAQjB,MAAMA,EAAMyH,c","file":"static/js/main.20b4329b.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAa6Ls56u3oK3zmKSS-eR-yV-1nF2L_n7M',\n  authDomain: 'second-hand-parts-f4116.firebaseapp.com',\n  databaseURL: 'https://second-hand-parts-f4116.firebaseio.com',\n  projectId: 'second-hand-parts-f4116',\n  storageBucket: 'second-hand-parts-f4116.appspot.com',\n  messagingSenderId: '1079456856511',\n  appId: '1:1079456856511:web:a563a40c469e9cee8bc90a',\n}\n\nexport default firebase.initializeApp(firebaseConfig)\n\n// Get a reference to the database service\n//   var database = firebase.database();\n\n// export default database;\n","import firebase from '../../firebase/firebase'\r\n\r\nexport const SET_USER_REQUEST = 'SET_USER_REQUEST'\r\nexport const SET_USER_SUCCESS = 'SET_USER_SUCCESS'\r\nexport const SET_USER_UNSUCCESS = 'SET_USER_UNSUCCESS'\r\nexport const CHECK_USER_REQUEST = 'CHECK_USER_REQUEST'\r\nexport const CHECK_USER_SUCCESS = 'CHECK_USER_SUCCESS'\r\nexport const CHECK_USER_UNSUCCESS = 'CHECK_USER_UNSUCCESS'\r\nexport const CREATE_USER_REQUEST = 'CREATE_USER_REQUEST'\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS'\r\nexport const CREATE_USER_UNSUCCESS = 'CREATE_USER_UNSUCCESS'\r\nexport const LOG_OUT_USER = 'LOG_OUT_USER'\r\n\r\nexport const createUser = ({ email, password, displayName, phone }) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: CREATE_USER_REQUEST,\r\n    })\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(user => {\r\n        user.user\r\n          .updateProfile({\r\n            displayName,\r\n          })\r\n          .then(() => {\r\n            firebase\r\n              .database()\r\n              .ref('users')\r\n              .child(user.user.uid)\r\n              .set({\r\n                email,\r\n                password,\r\n                displayName,\r\n                phone,\r\n                ownerId: user.user.uid,\r\n              })\r\n          })\r\n        dispatch({\r\n          type: CREATE_USER_SUCCESS,\r\n          payload: {\r\n            email,\r\n            displayName,\r\n            phone,\r\n            ownerId: user.user.uid,\r\n          },\r\n        })\r\n      })\r\n      .catch(e => {\r\n        dispatch({\r\n          type: CREATE_USER_UNSUCCESS,\r\n          payload: e.message,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const setUser = ({ user, password }) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_USER_REQUEST,\r\n    })\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user, password)\r\n      .then(() => {\r\n        // console.log('signInWithEmailAndPassword', resp)\r\n        dispatch({\r\n          type: SET_USER_SUCCESS,\r\n          // payload: status.user,\r\n        })\r\n      })\r\n      .catch(e => {\r\n        dispatch({\r\n          type: SET_USER_UNSUCCESS,\r\n          payload: e.message,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const checkAuthStateChanged = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: CHECK_USER_REQUEST,\r\n    })\r\n    firebase.auth().onAuthStateChanged(status => {\r\n      // console.log('loggedIn', status)\r\n      if (status) {\r\n        firebase\r\n          .database()\r\n          .ref('users')\r\n          .child(status.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            // console.log('checkAuthStateChanged', snapshot.val())\r\n            dispatch({\r\n              type: CHECK_USER_SUCCESS,\r\n              payload: snapshot.val(),\r\n            })\r\n          })\r\n      } else {\r\n        dispatch({\r\n          type: CHECK_USER_UNSUCCESS,\r\n          // payload: user,\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const logOutUser = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: LOG_OUT_USER,\r\n    })\r\n    firebase.auth().signOut()\r\n  }\r\n}\r\n","import {\r\n  SET_USER_REQUEST,\r\n  SET_USER_SUCCESS,\r\n  SET_USER_UNSUCCESS,\r\n  CHECK_USER_REQUEST,\r\n  CHECK_USER_SUCCESS,\r\n  CHECK_USER_UNSUCCESS,\r\n  CREATE_USER_REQUEST,\r\n  CREATE_USER_SUCCESS,\r\n  CREATE_USER_UNSUCCESS,\r\n  LOG_OUT_USER,\r\n} from '../actions/userAction'\r\n\r\nconst initialState = {\r\n  displayName: '',\r\n  // password: '',\r\n  isFetching: false,\r\n  isLoggedIn: false,\r\n  error: false,\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case SET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        // ...action.payload,\r\n        // user: action.payload.displayName,\r\n        // status: action.payload,\r\n        // ownerId: action.payload.uid,\r\n        isFetching: false,\r\n        isLoggedIn: true,\r\n      }\r\n    case SET_USER_UNSUCCESS:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false,\r\n        isLoggedIn: false,\r\n      }\r\n    case CHECK_USER_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case CHECK_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        password: '',\r\n        // user: action.payload.displayName,\r\n        // status: action.payload,\r\n        // ownerId: action.payload.uid,\r\n        isFetching: false,\r\n        isLoggedIn: true,\r\n      }\r\n    case CHECK_USER_UNSUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoggedIn: false,\r\n        displayName: '',\r\n        phone: '',\r\n        ownerId: '',\r\n        password: '',\r\n        email: '',\r\n      }\r\n    case CREATE_USER_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case CREATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        // user: action.payload.displayName,\r\n        // phone: action.payload.phone,\r\n        // status: action.payload.user,\r\n        isFetching: false,\r\n        isLoggedIn: true,\r\n      }\r\n    case CREATE_USER_UNSUCCESS:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false,\r\n        isLoggedIn: false,\r\n      }\r\n    case LOG_OUT_USER:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import firebase from '../../firebase/firebase'\r\n\r\nexport const GET_BASE_REQUEST = 'GET_BASE_REQUEST'\r\nexport const GET_BASE_SUCCESS = 'GET_BASE_SUCCESS'\r\nexport const GET_BASE_UNSUCCESS = 'GET_BASE_UNSUCCESS'\r\nexport const GET_USER_OWNER_REQUEST = 'GET_USER_OWNER_REQUEST'\r\nexport const GET_USER_OWNER_SUCCESS = 'GET_USER_OWNER_SUCCESS'\r\nexport const GET_USER_OWNER_UNSUCCESS = 'GET_USER_OWNER_UNSUCCESS'\r\nexport const GET_ALL_USERS_REQUEST = 'GET_USERS_REQUEST'\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_USERS_SUCCESS'\r\nexport const GET_ALL_USERS_UNSUCCESS = 'GET_USERS_UNSUCCESS'\r\nexport const DEL_ITEM = 'DEL_ITEM'\r\nexport const GET_MY_BASE_REQUEST = 'GET_MY_BASE_REQUEST'\r\nexport const GET_MY_BASE_SUCCESS = 'GET_MY_BASE_SUCCESS'\r\nexport const GET_MY_BASE_UNSUCCESS = 'GET_MY_BASE_UNSUCCESS'\r\nexport const CLEAR_BASE = 'CLEAR_BASE'\r\n\r\nexport const delItem = (itemId) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: DEL_ITEM\r\n    })\r\n    firebase\r\n      .database()\r\n      .ref('orders/' + itemId)\r\n      .remove().then((e) => {\r\n        console.log('DEL_ITEM', e)\r\n      })\r\n  }\r\n}\r\n\r\nexport const clearBase = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: CLEAR_BASE,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getBase = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_BASE_REQUEST,\r\n    })\r\n    firebase\r\n      .database()\r\n      .ref('orders')\r\n      .once('value')\r\n      .then(snapshot => {\r\n        dispatch({\r\n          type: GET_BASE_SUCCESS,\r\n          payload: Object.entries(snapshot.val()).map((ent) => {\r\n            ent[1].id = ent[0]\r\n            return ent[1]\r\n          }).reverse(),\r\n        })\r\n      })\r\n      .catch(e => {\r\n        console.log('GET_BASE_UNSUCCESS', e)\r\n        dispatch({\r\n          type: GET_BASE_UNSUCCESS,\r\n          payload: e,\r\n        })\r\n      })\r\n  }\r\n}\r\n","import {\r\n  GET_BASE_REQUEST,\r\n  GET_BASE_SUCCESS,\r\n  // GET_BASE_UNSUCCESS,\r\n  GET_USER_OWNER_REQUEST,\r\n  GET_USER_OWNER_SUCCESS,\r\n  GET_ALL_USERS_REQUEST,\r\n  GET_ALL_USERS_SUCCESS,\r\n  GET_MY_BASE_REQUEST,\r\n  GET_MY_BASE_SUCCESS,\r\n  CLEAR_BASE,\r\n} from '../actions/dataBaseAction'\r\n\r\nconst initialState = {}\r\n\r\nexport function dataBaseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MY_BASE_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case GET_MY_BASE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        myOrders: action.payload,\r\n        isFetching: false,\r\n      }\r\n    case GET_BASE_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case GET_BASE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        baseOrders: action.payload,\r\n        isFetching: false,\r\n      }\r\n    case GET_ALL_USERS_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case GET_ALL_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allUsers: action.payload,\r\n        isFetching: false,\r\n      }\r\n    case GET_USER_OWNER_REQUEST:\r\n      return { ...state, isFetching: true }\r\n    case GET_USER_OWNER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userOwnerPhone: action.payload,\r\n        isFetching: false,\r\n      }\r\n    case CLEAR_BASE:\r\n      return { ...initialState, isFetching: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { userReducer } from './user'\r\nimport { dataBaseReducer } from './dataBase'\r\n\r\nexport const rootReducer = combineReducers({\r\n  userInfo: userReducer,\r\n  dataBase: dataBaseReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from './reducers/index'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger))\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FormControl, TextField, Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\n\r\nimport firebase from '../../firebase/firebase'\r\nimport { getBase } from '../../store/actions/dataBaseAction'\r\nimport { styles } from './style'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nlet initStateOrder = {\r\n  brand: '',\r\n  model: '',\r\n  part: '',\r\n  description: '',\r\n  ownerId: '',\r\n}\r\n\r\nconst CreateOrder = props => {\r\n  const createYear = (new Date()).getFullYear();\r\n  const date = (new Date()).toDateString()\r\n  // console.log('CreateOrder', props)\r\n\r\n  const { ownerId, isLoggedIn, history, getBase, ownerPhone, ownerName, item, itemId = '', clearItemOrder } = props\r\n\r\n  const [state, setState] = useState(initStateOrder)\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      history.push('/')\r\n    }\r\n    if (item) {\r\n      setState(item)\r\n    }\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const { container, textField, buttonOrder } = useStyles()\r\n  // order\r\n\r\n  const [isValid, setIsValid] = useState(false)\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setState({ ...state, [name]: value, ownerId, ownerPhone, ownerName, createYear, date, clickEvent: '' })\r\n    setIsValid(true)\r\n  }\r\n  //TODO: firebase action?\r\n  const setOrderInFirebase = state => {\r\n    if (itemId) {\r\n      firebase\r\n        .database()\r\n        .ref('orders/' + itemId)\r\n        .remove()\r\n    }\r\n    firebase\r\n      .database()\r\n      .ref('orders')\r\n      .push(state)\r\n    setState(initStateOrder)\r\n    setIsValid(false)\r\n  }\r\n  return (\r\n    <FormControl className={container} noValidate autoComplete=\"off\">\r\n      <h1 className={buttonOrder}>Оформить позицию</h1>\r\n      <TextField\r\n        name=\"brand\"\r\n        className={textField}\r\n        value={state.brand}\r\n        onChange={handleChange}\r\n        label=\"Бренд: наименование производителя например Samsung\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        name=\"model\"\r\n        className={textField}\r\n        value={state.model}\r\n        onChange={handleChange}\r\n        label=\"Модель: наименование модели аппарата например A510\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        name=\"part\"\r\n        className={textField}\r\n        value={state.part}\r\n        onChange={handleChange}\r\n        label=\"Parts: наименование запчасти(дисплй, плата) или пометка в сборе\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        name=\"description\"\r\n        className={textField}\r\n        value={state.description}\r\n        onChange={handleChange}\r\n        label=\"Описание: цвет, работоспособность ...\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n      />\r\n      <Button\r\n        disabled={!isValid}\r\n        onClick={() => {\r\n          setOrderInFirebase(state)\r\n          getBase()\r\n          if (itemId) {\r\n            clearItemOrder()\r\n          }\r\n          // getMyBase()\r\n        }}\r\n        variant=\"outlined\"\r\n        className={buttonOrder}\r\n        color=\"primary\"\r\n      >\r\n        Сформировать позицию\r\n      </Button>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ userInfo: { ownerId, isLoggedIn, phone, displayName } }) => {\r\n  return {\r\n    ownerId,\r\n    isLoggedIn,\r\n    ownerPhone: phone,\r\n    ownerName: displayName,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBase: () => dispatch(getBase()),\r\n    // getMyBase: () => dispatch(getMyBase()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrder)\r\n","export const styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        margin: '10px',\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        // margin: '10px',\r\n        // overflow: 'hidden',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    buttonOrder: {\r\n        display: 'flex',\r\n        flex: 'auto',\r\n        justifyContent: 'center',\r\n    },\r\n})","import React from 'react'\r\nimport { css } from '@emotion/core'\r\nimport BounceLoader from 'react-spinners/BounceLoader'\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`\r\n\r\nconst Spiner = () => {\r\n  return (\r\n    <BounceLoader css={override} size={40} color={'#123abc'} loading={true} />\r\n  )\r\n}\r\n\r\nexport default Spiner\r\n","import React from 'react'\r\nimport { Link, Typography } from '@material-ui/core'\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://glubina.github.io/\">\r\n        Студия \"Глубина\"\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default Copyright\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport Spiner from '../../common/spiner'\r\nimport Copyright from '../../common/copiright'\r\nimport { setUser, logOutUser } from '../../store/actions/userAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  aLink: {\r\n    textDecoration: 'none',\r\n    color: '#3f51b5',\r\n  },\r\n}))\r\n\r\nconst LogIn = props => {\r\n  // console.log('LogIn', props)\r\n\r\n  const classes = useStyles()\r\n  let email, password\r\n  const {\r\n    setUser,\r\n    user: { isFetching, error, isLoggedIn },\r\n    history,\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push('/create')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {isFetching ? (\r\n          <Spiner />\r\n        ) : (\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n          )}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            error={!!error}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            inputRef={el => (email = el)}\r\n          />\r\n          <TextField\r\n            error={!!error}\r\n            helperText={error}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={el => (password = el)}\r\n          />\r\n          {/* TODO: - функционал запомнить пользователя */}\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => {\r\n              setUser({ user: email.value, password: password.value })\r\n            }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <NavLink className={classes.aLink} to=\"/signup\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      {/*TODO: тестовая кнопка удалить */}\r\n      {/* <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        onClick={() => {\r\n          console.log('logOutUser')\r\n          logOutUser()\r\n        }}\r\n      >\r\n        logout\r\n      </Button> */}\r\n      {/* <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        onClick={() => {\r\n          history.push('/create')\r\n          // firebase.database().ref('users').child('MOHAX@test').set({ OwnerId: 1 })\r\n        }}\r\n      >\r\n        nav\r\n      </Button> */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.userInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setUser: user => dispatch(setUser(user)),\r\n    logOutUser: () => dispatch(logOutUser()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)\r\n\r\n// чтение firebase.database().ref('users').once('value').then(v => {console.log('fire', v.val())})\r\n// запись без генерации id  firebase.database().ref('users').child('MOHAX@test').set({ OwnerId: 1 })\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { createUser } from '../../store/actions/userAction'\r\n\r\nimport Copyright from '../../common/copiright'\r\nimport Spiner from '../../common/spiner'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  aLink: {\r\n    textDecoration: 'none',\r\n    color: '#3f51b5',\r\n  },\r\n}))\r\n\r\nconst SignUp = props => {\r\n  console.log('SignUp', props)\r\n  const {\r\n    createUser,\r\n    history,\r\n    user: { isFetching, error, isLoggedIn },\r\n  } = props\r\n  const classes = useStyles()\r\n  let name, phone, email, password\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push('/create')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {isFetching ? (\r\n          <Spiner />\r\n        ) : (\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n          )}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                inputRef={el => (name = el)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                autoComplete=\"phone\"\r\n                inputRef={el => (phone = el)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={!!error}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                inputRef={el => (email = el)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={!!error}\r\n                helperText={error}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={el => (password = el)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => {\r\n              createUser({\r\n                email: email.value,\r\n                password: password.value,\r\n                displayName: name.value,\r\n                phone: phone.value,\r\n              })\r\n              console.log(name.value)\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <NavLink className={classes.aLink} to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.userInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createUser: user => dispatch(createUser(user)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { checkAuthStateChanged } from '../../store/actions/userAction'\r\n// import { getAllUsers } from '../../store/actions/dataBaseAction'\r\n// import { userLoaded } from \"../actions/index\";\r\n// import Fab from '@material-ui/core/Fab';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between',\r\n  },\r\n  aLink: {\r\n    color: 'inherit',\r\n    textDecoration: 'inherit',\r\n  },\r\n}))\r\n\r\nconst NavPanel = props => {\r\n  const classes = useStyles()\r\n  // console.log('NavPanel', props)\r\n  const {\r\n    userInfo: { isLoggedIn, displayName },\r\n    checkAuthStateChanged,\r\n    // getAllUsers,\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      checkAuthStateChanged()\r\n    }\r\n    // if (isLoggedIn) {\r\n    //   getAllUsers()\r\n    // }\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //   TODO: checkAuthStateChanged->useEffect or componentDidMount\r\n  //   checkAuthStateChanged()\r\n  return isLoggedIn ? (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <NavLink className={classes.aLink} to=\"/create\">\r\n            <Button variant=\"outlined\" color=\"inherit\">\r\n              Оформить позицию\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink className={classes.aLink} to=\"/view\">\r\n            <Button variant=\"outlined\" color=\"inherit\">\r\n              Список запчастей\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink className={classes.aLink} to=\"/userAccount\">\r\n            <Button variant=\"outlined\" color=\"inherit\">\r\n              User Account {displayName}\r\n            </Button>\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    userInfo: store.userInfo,\r\n    // allUsers: store.\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    checkAuthStateChanged: () => dispatch(checkAuthStateChanged()),\r\n    // getAllUsers: () => dispatch(getAllUsers()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavPanel)\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Modal, Backdrop, Fade, Button } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { styles } from './style'\r\nimport { getBase, delItem } from '../../store/actions/dataBaseAction'\r\nimport CreateOrder from '../createOrder/createOrder'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ItemOrder = props => {\r\n  // console.log('ItemOrder', props)\r\n  const classes = useStyles()\r\n  const {\r\n    getBase,\r\n    delItem,\r\n    itemOrder,\r\n    state: {\r\n      userInfo: { ownerId }\r\n    },\r\n  } = props\r\n\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const isOwner = itemOrder.ownerId === ownerId\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={!!itemOrder.id}\r\n        onClose={\r\n          () => {\r\n            props.clearItemOrder()\r\n            setIsEdit(false)\r\n          }\r\n        }\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade\r\n          in={!!itemOrder.id}\r\n        >\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Выбранная запчасть</h2>\r\n            <div className={classes.editer}>\r\n              {\r\n                isEdit ?\r\n                  <CreateOrder clearItemOrder={props.clearItemOrder} item={itemOrder} itemId={itemOrder.id} /> :\r\n                  <div>\r\n                    <div className={classes.itemString}>\r\n                      Владелец: {itemOrder.ownerName || ''}\r\n                    </div>\r\n                    <div className={classes.itemString}>brand: {itemOrder.brand || ''} </div>\r\n                    <div className={classes.itemString}>Model :{itemOrder.model || ''}</div>\r\n                    <div className={classes.itemString}>Part: {itemOrder.part || ''}</div>\r\n                    <div className={classes.itemString}>\r\n                      Description: {itemOrder.description || ''}\r\n                    </div>\r\n                    <div\r\n                      className={classes.itemString}\r\n                    >\r\n                      Телефон хозяина :{itemOrder.ownerPhone}\r\n                    </div>\r\n                    <div\r\n                      className={classes.itemString}\r\n                    >\r\n                      Дата создания :{itemOrder.date}\r\n                    </div>\r\n                  </div>\r\n              }\r\n              {isOwner ?\r\n                <>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    className={classes.buttonDel}\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      props.clearItemOrder()\r\n                      delItem(itemOrder.id)\r\n                      getBase()\r\n                    }}\r\n                  >\r\n                    Удалить запчасть(вы хозяин)\r\n              </Button>\r\n                  {\r\n                    isEdit ?\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        className={classes.buttonDel}\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setIsEdit(false)\r\n                        }}\r\n                      >\r\n                        Отменить редактирование\r\n                  </Button>\r\n                      :\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        className={classes.buttonDel}\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setIsEdit(true)\r\n                        }}\r\n                      >\r\n                        Редактировать запчасть\r\n                      </Button>\r\n                  }\r\n                </>\r\n                : null\r\n              }\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    state,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBase: () => dispatch(getBase()),\r\n    delItem: (id) => dispatch(delItem(id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemOrder)\r\n","export const styles = theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  itemString: {\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: '50rem',\r\n    margin: '10px',\r\n  },\r\n  buttonDel: {\r\n    display: 'flex',\r\n    flex: 'auto',\r\n    justifyContent: 'center',\r\n  },\r\n  editer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n  }\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport { getBase } from '../../store/actions/dataBaseAction'\r\nimport Spiner from '../../common/spiner'\r\nimport ItemOrder from '../itemOrder/itemOrder'\r\n\r\n\r\nconst ViewOrders = props => {\r\n  const {\r\n    getBase,\r\n    history,\r\n    isLoggedIn,\r\n    dataBase: { isFetching, baseOrders = [] },\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      history.push('/')\r\n    }\r\n    if (baseOrders.length < 1) {\r\n      getBase()\r\n    }\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return isFetching ? (\r\n    <Spiner size={150} />\r\n  ) : (\r\n      <MyTable\r\n        filtredArr={baseOrders}\r\n      />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ dataBase, userInfo: { isLoggedIn, } }) => {\r\n  return {\r\n    dataBase: dataBase,\r\n    isLoggedIn,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBase: () => dispatch(getBase()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrders)\r\n\r\nexport const MyTable = (props) => {\r\n  // console.log('MyTable', props)\r\n  const { filtredArr } = props\r\n  const [itemOrder, setItemOrder] = useState({})\r\n\r\n  const filtredArrWithClick = filtredArr.map((el) => {\r\n    el.clickEvent = () => {\r\n      setItemOrder(el)\r\n    }\r\n    return el\r\n  })\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'Brand',\r\n        field: 'brand',\r\n        sort: 'asc',\r\n        // width: 150\r\n      },\r\n      {\r\n        label: 'Model',\r\n        field: 'model',\r\n        sort: 'asc',\r\n        // width: 270\r\n      },\r\n      {\r\n        label: 'Part',\r\n        field: 'part',\r\n        sort: 'asc',\r\n        // width: 200\r\n      },\r\n      {\r\n        label: 'Description',\r\n        field: 'description',\r\n        sort: 'asc',\r\n        // width: 100\r\n      },\r\n    ],\r\n    rows: filtredArrWithClick\r\n  }\r\n\r\n  const clearItemOrder = () => {\r\n    setItemOrder({})\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        hover\r\n        data={data}\r\n      />\r\n      <ItemOrder itemOrder={itemOrder} clearItemOrder={clearItemOrder}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { logOutUser } from '../../store/actions/userAction'\r\nimport { clearBase, getBase } from '../../store/actions/dataBaseAction'\r\nimport { MyTable } from '../viewOrders/viewOrders'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    margin: '10px',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  buttonOrder: {\r\n    display: 'flex',\r\n    flex: 'auto',\r\n    justifyContent: 'center',\r\n    margin: '10px',\r\n  },\r\n}))\r\n\r\nconst UserAccount = props => {\r\n  // console.log('UserAccount', props)\r\n  const { container, buttonOrder } = useStyles()\r\n  const [isShowMyOrders, setisShowMyOrders] = useState(false)\r\n\r\n  const {\r\n    clearBase,\r\n    logOutUser,\r\n    history,\r\n    getBase,\r\n    baseOrders = [],\r\n    userInfo: { isLoggedIn, user, ownerId },\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      history.push('/')\r\n    }\r\n    getBase()\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const filtredArr = baseOrders.filter(el => { return el.ownerId === ownerId })\r\n\r\n  return (\r\n    <div className={container}>\r\n      <h1 className={buttonOrder}>{user}</h1>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={buttonOrder}\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          logOutUser()\r\n          clearBase()\r\n          history.push('/')\r\n        }}\r\n      >\r\n        LogOut\r\n      </Button>\r\n      {isShowMyOrders ?\r\n        <MyTable\r\n          filtredArr={filtredArr}\r\n        />\r\n        :\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={buttonOrder}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setisShowMyOrders(true)\r\n          }}\r\n        >\r\n          Показать собственные запчасти\r\n    </Button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    userInfo: store.userInfo,\r\n    myOrders: store.dataBase.myOrders,\r\n    baseOrders: store.dataBase.baseOrders,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOutUser: () => dispatch(logOutUser()),\r\n    clearBase: () => dispatch(clearBase()),\r\n    getBase: () => dispatch(getBase()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccount)\r\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { CssBaseline, Container } from '@material-ui/core'\n// import { connect } from 'react-redux'\n\nimport CreateOrder from './containers/createOrder/createOrder'\nimport LogIn from './containers/loginForm/logIn'\nimport SignUp from './containers/loginForm/signUp'\nimport NavPanel from './containers/navPanel/navPanel'\nimport ViewOrders from './containers/viewOrders/viewOrders'\nimport UserAccount from './containers/userAccount/userAccount'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <NavPanel />\n        <Switch>\n          <Route path=\"/login\" component={LogIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateOrder} />\n          <Route path=\"/userAccount\" component={UserAccount} />\n          {/* <Route\n            path=\"/create\"\n            render={() => <CreateOrder loggedIn={loggedIn} />}\n          /> */}\n          <Route path=\"/view\" component={ViewOrders} />\n          <Redirect to={'/'} />\n        </Switch>\n      </Container>\n    </React.Fragment>\n  )\n}\n\n// const mapStateToProps = store => {\n//   return {\n//     userInfo: store.userInfo,\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     // setUser: user => dispatch(setUser(user)),\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { store } from './store/configureStore'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}